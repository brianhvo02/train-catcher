import Head from 'next/head';
import { Table, Link } from '@nextui-org/react';
import styles from '@/styles/Home.module.css';

import { useState } from "react";
import { useStop, useRT } from '@/common';

function timestampToDate(timestamp: number) {
	return new Date(timestamp * 1000).toLocaleString();
}

export default function OngoingTrips() {
	const [ stopId, setStopId ] = useState("");
	const { data: stop_data } = useStop();
	const { data: rt_data } = useRT();
	if (!stop_data || !rt_data) return <>Loading...</>;

	return (
		<>
			<Head>
				<title>Train Catcher</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main>
				<p>Last Updated: {new Date(parseInt(rt_data?.header.timestamp?.toString() + "000")).toLocaleString()}</p>
				<label>
					Filter by line:
					&nbsp;
					<input type="text" onChange={e => setStopId(e.currentTarget.value)} />
				</label>
				<Table className={styles.trains} aria-label="Trains Table">
					
					<Table.Header>
						<Table.Column>Train ID</Table.Column>
						<Table.Column>Line Name</Table.Column>
						<Table.Column>Stop ID</Table.Column>
						<Table.Column>Departure Time</Table.Column>
					</Table.Header>
					<Table.Body>
					{
						rt_data ? rt_data.entity.filter(entity => entity.tripUpdate?.trip.routeId?.toLowerCase().includes(stopId.toLowerCase())).map((entity, i) => {
							if (entity.tripUpdate?.stopTimeUpdate!.length == 0) return (
								<Table.Row key={i.toString()}>
									<Table.Cell>{entity.id}</Table.Cell>
									<Table.Cell>{entity.tripUpdate?.trip?.routeId}</Table.Cell>
									<Table.Cell><></></Table.Cell>
									<Table.Cell><></></Table.Cell>
								</Table.Row>
							)
							const stopId = entity.tripUpdate?.stopTimeUpdate![0].stopId;
							const stop = stop_data["Contents"]["dataObjects"]["ScheduledStopPoint"].find((el: any) => el.id == stopId);

							return (
								<Table.Row key={i.toString()}>
									<Table.Cell>{entity.id}</Table.Cell>
									<Table.Cell>{entity.tripUpdate?.trip?.routeId}</Table.Cell>
									<Table.Cell>
										<Link href={`/bart/stop/${stopId}`}>
											{stop["Name"]}
										</Link>
									</Table.Cell>
									<Table.Cell>{entity.tripUpdate?.stopTimeUpdate![0].arrival?.time ? timestampToDate(entity.tripUpdate?.stopTimeUpdate![0].departure?.time as number) : "No departure time"}</Table.Cell>
								</Table.Row>
							)
						}
						) : <></>
					}
					</Table.Body>
				</Table>
			</main>
		</>
	);
}
